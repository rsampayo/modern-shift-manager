openapi: 3.0.0
info:
  title: STX Underground LLC - Clock-In & Tracking System API
  version: 1.0.0
  description: API for managing employee clock-in/out, JSA checklists, and notifications

servers:
  - url: https://api.stxunderground.com/v1
    description: Production server
  - url: https://staging-api.stxunderground.com/v1
    description: Staging server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    JSAChecklist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        type:
          type: string
          enum: [clockIn, clockOut]
        responses:
          type: object
          properties:
            firstAidKit:
              type: string
              enum: [yes, no, na]
            fireExtinguishers:
              type: string
              enum: [yes, no, na]
            # ... other JSA checklist items
        timestamp:
          type: string
          format: date-time
        userId:
          type: string
          format: uuid

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [reminder, maintenance, alert, system]
        title:
          type: string
        message:
          type: string
        read:
          type: boolean
        timestamp:
          type: string
          format: date-time
        userId:
          type: string
          format: uuid

paths:
  /sessions/clock-in:
    post:
      summary: Clock in with JSA checklist
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                jsaChecklist:
                  $ref: '#/components/schemas/JSAChecklist'
      responses:
        '201':
          description: Clock-in successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                    format: uuid
                  clockInTime:
                    type: string
                    format: date-time
                  jsaChecklist:
                    $ref: '#/components/schemas/JSAChecklist'

  /sessions/{sessionId}/clock-out:
    post:
      summary: Clock out with JSA checklist
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
                jsaChecklist:
                  $ref: '#/components/schemas/JSAChecklist'
      responses:
        '200':
          description: Clock-out successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  clockOutTime:
                    type: string
                    format: date-time
                  duration:
                    type: string
                  jsaChecklist:
                    $ref: '#/components/schemas/JSAChecklist'

  /notifications:
    get:
      summary: Get user notifications
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: unreadOnly
          schema:
            type: boolean
        - in: query
          name: type
          schema:
            type: string
            enum: [reminder, maintenance, alert, system]
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /notifications/{notificationId}/mark-read:
    post:
      summary: Mark notification as read
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: notificationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
